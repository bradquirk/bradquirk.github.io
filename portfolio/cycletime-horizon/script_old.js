d3.csv("data.csv", function(e, t) { if (e) throw e; var r = { xAxis: "white", mouseoverSelectedNode: "#00FFFF", mouseoverConnectedNode: "#00FFA1", mouseoverUnconnectedNode: "#FBB03B", nodeColour: "#FBB03B", nodeOpacity: .2, nodeSelectedOpacity: .2, nodeUnselectedOpacity: .1, linkOpacity: .3, linkSelectedOpacity: 1, linkUnselectedOpacity: .1 },
        a = d3.utcParse("%Y-%m-%dT%H:%M:%S"),
        n = d3.timeFormat("%Y-%m-%d"),
        o = d3.timeFormat("%d-%m-%Y"),
        s = d3.timeParse("%Y-%m-%d"),
        l = n(a(0));
    t.forEach(function(e) { e.key = e.Key, e.inProgressDate = n(a(e["First In Progress Date"])), e.resolvedDate = n(a(e["Last Resolved Date"])) }), console.log(t); var c = d3.nest().key(e => e.inProgressDate).sortKeys(d3.ascending).key(e => e.resolvedDate).sortKeys(d3.ascending).rollup(e => e.length).entries(t);
    c.forEach((e, t) => { if (e.key != l) { for (var r = 0; r < e.values.length; r++) e.values[r].key != l && (e.source = s(e.key), e.target = s(e.values[r].key), e.count = e.values[r].value);
            delete e.key, delete e.values } }); var i = d3.nest().key(e => e.inProgressDate).sortKeys(d3.ascending).rollup(e => e.length).entries(t);
    i.forEach(e => { e.key == l && i.shift(), e.key = s(e.key) }); var d = d3.nest().key(e => e.resolvedDate).sortKeys(d3.ascending).rollup(e => e.length).entries(t);
    d.forEach(e => { e.key == l ? i.shift() : e.key = s(e.key) }); var u = i;
    d.forEach(e => { var t = u.findIndex(t => n(t.key) == n(e.key));
        t > -1 ? u[t].value += e.value : u.push(e) }), u.sort((e, t) => d3.ascending(e.key, t.key)), u = u.filter(e => n(e.key) != l); var y = $("#chart").width() - 20 - 20,
        g = .6 * $(window).innerHeight() - 20 - 40,
        m = d3.select("#chart").append("svg").attr("width", y + 20 + 20).attr("height", g + 20 + 40).append("g").attr("transform", "translate(20,20)"),
        p = d3.scaleTime().range([0, y]),
        f = d3.scaleLinear().range([g, 0]);
    p.domain([d3.min(c, e => e.source), d3.max(c, e => e.target)]), p.domain(d3.extent(u, e => e.key)), f.domain([0, d3.max(c, e => e.count)]); var k = d3.scaleLinear().domain(d3.extent(u, e => e.value)).range([5, 15]),
        v = d3.scaleSequential().interpolator(function piecewise(e, t) { for (var r = 0, a = t.length - 1, n = t[0], o = new Array(a < 0 ? 0 : a); r < a;) o[r] = e(n, n = t[++r]); return function(e) { var t = Math.max(0, Math.min(a - 1, Math.floor(e *= a))); return o[t](e - t) } }(d3.interpolateHcl, ["#A0FE65", "#FA016D"])).domain(d3.extent(c, e => p(e.target) - p(e.source))),
        h = d3.scaleLinear().domain(d3.extent(c, e => p(e.target) - p(e.source))).range(["#00FFFF", "#00FFA1"]),
        x = d3.scaleLinear().domain(d3.extent(c, e => e.count)).range([2, 5]),
        N = d3.arc().innerRadius(e => (p(e.target) - p(e.source)) / 2 - x(e.count)).outerRadius(e => (p(e.target) - p(e.source)) / 2),
        A = (m.append("line"), m.append("line"), m.append("g").selectAll("path").data(c).enter().append("path").attr("class", "arc").attr("id", e => "resolved_" + n(e.source) + "_" + n(e.target)).attr("source", e => n(e.source)).attr("target", e => n(e.target)).attr("transform", e => "translate(" + (p(e.target) - (p(e.target) - p(e.source)) / 2) + "," + g / 2 + ")").style("fill", e => v(p(e.target) - p(e.source))).style("opacity", r.linkOpacity).attr("d", N.startAngle(.5 * Math.PI).endAngle(1.5 * Math.PI)).on("mouseover", e => { I.style("fill", function(t) { return n(t.key) === n(e.source) || n(t.key) === n(e.target) ? r.mouseoverConnectedNode : r.mouseoverUnconnectedNode }).style("opacity", function(t) { return n(t.key) === n(e.source) || n(t.key) === n(e.target) ? 1 : 0 }), P.style("fill", function(t) { return n(t.source) === n(e.source) && n(t.target) === n(e.target) ? h(p(t.target) - p(t.source)) : v(p(t.target) - p(t.source)) }).style("opacity", function(t) { return n(t.source) === n(e.source) && n(t.target) === n(e.target) ? 1 : 0 }), S.text("Start Date"), B.attr("font-size", "2em").text(o(e.source)), E.text("Cycle Time (Bus. Days)"), T.text(calcCycleTime(e.source, e.target)), _.text("End Date"), H.attr("font-size", "2em").text(o(e.target)) }).on("mouseout", e => { resetDefault() })),
        D = m.append("g").selectAll("path").data(c).enter().append("path").attr("class", "arc").attr("id", e => "inProgress_" + n(e.source) + "_" + n(e.target)).attr("source", e => n(e.source)).attr("target", e => n(e.target)).attr("transform", e => "translate(" + (p(e.target) - (p(e.target) - p(e.source)) / 2) + "," + g / 2 + ")").style("fill", e => v(p(e.target) - p(e.source))).style("opacity", r.linkOpacity).attr("d", N.startAngle(1.5 * Math.PI).endAngle(2.5 * Math.PI)).on("mouseover", e => { I.style("fill", function(t) { return n(t.key) === n(e.source) || n(t.key) === n(e.target) ? r.mouseoverConnectedNode : r.mouseoverUnconnectedNode }).style("opacity", function(t) { return n(t.key) === n(e.source) || n(t.key) === n(e.target) ? 1 : 0 }), w.style("fill", function(t) { return n(t.source) === n(e.source) && n(t.target) === n(e.target) ? h(p(t.target) - p(t.source)) : v(p(t.target) - p(t.source)) }).style("opacity", function(t) { return n(t.source) === n(e.source) && n(t.target) === n(e.target) ? 1 : 0 }), S.text("Start Date"), B.attr("font-size", "2em").text(o(e.source)), E.text("Cycle Time (Bus. Days)"), T.text(calcCycleTime(e.source, e.target)), _.text("End Date"), H.attr("font-size", "2em").text(o(e.target)) }).on("mouseout", e => { resetDefault() }),
        C = {};
    c.forEach(function(e) { C[n(e.source) + "," + n(e.target)] = e.count }), m.append("g").attr("id", "x").attr("class", "axis").attr("transform", "translate(0," + g / 2 + ")").style("pointer-events", "none").call(d3.axisBottom(p)); var F = m.append("g").selectAll("circle").data(u).enter().append("circle").attr("class", "nodes").attr("id", e => "node" + n(e.key)).attr("transform", e => "translate(" + p(e.key) + "," + g / 2 + ")").attr("r", e => k(e.value)).style("fill", r.nodeColour).style("opacity", r.nodeOpacity).on("mouseover", e => { I.style("fill", function(t) { return n(e.key) === n(t.key) ? r.mouseoverSelectedNode : isConnected(e, t) ? r.mouseoverConnectedNode : r.mouseoverUnconnectedNode }).style("opacity", function(t) { return n(e.key) === n(t.key) || isConnected(e, t) ? 1 : 0 }), w.style("fill", function(t) { return n(t.target) === n(e.key) ? h(p(t.target) - p(t.source)) : v(p(t.target) - p(t.source)) }).style("opacity", function(t) { return n(t.target) === n(e.key) ? 1 : 0 }), P.style("fill", function(t) { return n(t.source) === n(e.key) ? h(p(t.target) - p(t.source)) : v(p(t.target) - p(t.source)) }).style("opacity", function(t) { return n(t.source) === n(e.key) ? 1 : 0 }); var t = "number" == typeof d.find(t => n(e.key) == n(t.key)).value ? d.find(t => n(e.key) == n(t.key)).value : 0,
                a = "number" == typeof i.find(t => n(e.key) == n(t.key)).value ? i.find(t => n(e.key) == n(t.key)).value : 0;
            S.text("Work Items Completed"), B.text(undefinedCheck(t)), E.text("On this day"), T.text(o(e.key)), _.text("Work Items Started"), H.text(undefinedCheck(a)) }).on("mouseout", e => { resetDefault() }),
        P = m.append("g").selectAll("path").data(c).enter().append("path").attr("class", "arc").attr("id", e => "resolved_" + n(e.source) + "_" + n(e.target)).attr("source", e => n(e.source)).attr("target", e => n(e.target)).attr("transform", e => "translate(" + (p(e.target) - (p(e.target) - p(e.source)) / 2) + "," + g / 2 + ")").style("pointer-events", "none").style("opacity", 0).attr("d", N.startAngle(.5 * Math.PI).endAngle(1.5 * Math.PI)),
        w = m.append("g").selectAll("path").data(c).enter().append("path").attr("class", "arc").attr("id", e => "inProgress_" + n(e.source) + "_" + n(e.target)).attr("source", e => n(e.source)).attr("target", e => n(e.target)).attr("transform", e => "translate(" + (p(e.target) - (p(e.target) - p(e.source)) / 2) + "," + g / 2 + ")").style("pointer-events", "none").style("opacity", 0).attr("d", N.startAngle(1.5 * Math.PI).endAngle(2.5 * Math.PI)),
        I = m.append("g").selectAll("circle").data(u).enter().append("circle").attr("class", "nodeHighlight").attr("id", e => "node" + n(e.key)).attr("transform", e => "translate(" + p(e.key) + "," + g / 2 + ")").attr("r", e => k(e.value)).style("pointer-events", "none").style("stroke", "black").style("stroke-width", .25).style("opacity", 0);
    d3.selectAll("#node0NaN-NaN-NaN").remove(), d3.selectAll("#node0NaN-NaN").remove(), d3.selectAll("#node0NaN").remove(); var M = $("#summary").width() - 20 - 20,
        O = .6 * $(window).innerHeight() - 20 - 40,
        z = d3.select("#summary").append("svg").attr("width", M + 20 + 20).attr("height", O + 20 + 40).attr("alignment-baseline", "central").append("g").attr("transform", "translate(20,20)"),
        S = z.append("text").attr("id", "summaryResolvedTitle").attr("x", M / 2).attr("y", O / 4).attr("font-size", "1em").attr("dy", "-2.5em").attr("text-anchor", "middle").style("fill", "white"),
        B = z.append("text").attr("id", "summaryResolved").attr("x", M / 2).attr("y", O / 4).attr("font-size", "4em").attr("dy", ".35em").attr("text-anchor", "middle").style("fill", r.mouseoverConnectedNode),
        E = z.append("text").attr("id", "summaryDate").attr("x", M / 2).attr("y", O / 2).attr("font-size", "1em").attr("dy", "-.35em").attr("text-anchor", "middle").style("fill", "white"),
        T = z.append("text").attr("id", "summaryDate").attr("x", M / 2).attr("y", O / 2).attr("font-size", "2em").attr("dy", ".85em").attr("text-anchor", "middle").style("fill", r.mouseoverSelectedNode),
        _ = z.append("text").attr("id", "summaryInProgressTitle").attr("x", M / 2).attr("y", 3 * O / 4).attr("font-size", "1em").attr("dy", "3em").attr("text-anchor", "middle").style("fill", "white"),
        H = z.append("text").attr("id", "summaryInProgress").attr("x", M / 2).attr("y", 3 * O / 4).attr("font-size", "4em").attr("dy", ".35em").attr("text-anchor", "middle").style("fill", r.mouseoverConnectedNode);

    function isConnected(e, t) { return C[n(e.key) + "," + n(t.key)] || C[n(t.key) + "," + n(e.key)] || n(e.key) == n(t.key) }

    function resetDefault() { F.style("fill", r.nodeColour).style("opacity", r.nodeOpacity), I.style("opacity", 0), D.style("fill", e => v(p(e.target) - p(e.source))).style("opacity", r.linkOpacity), w.style("opacity", 0), A.style("fill", e => v(p(e.target) - p(e.source))).style("opacity", r.linkOpacity), P.style("opacity", 0), S.text(""), B.attr("font-size", "4em").text(""), E.text(""), T.text(""), _.text(""), H.attr("font-size", "4em").text("") }

    function undefinedCheck(e) { return void 0 === e ? 0 : e }

    function calcCycleTime(e, t) { if (t < e) return 0;
        e.setHours(0, 0, 0, 1), t.setHours(23, 59, 59, 999); var r = t - e,
            a = Math.ceil(r / 864e5);
        a -= 2 * Math.floor(a / 7); var n = e.getDay(),
            o = t.getDay(); return n - o > 1 && (a -= 2), 0 == n && 6 != o && (a -= 1), 6 == o && 0 != n && (a -= 1), a } });