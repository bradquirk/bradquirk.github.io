var dataTable, colourScheme, parseDate = d3.utcParse("%d/%m/%Y"),
    formatDate = d3.timeFormat("%Y-%W"),
    parseTime = d3.timeParse("%Y-%W"),
    cleanDate = d3.timeFormat("%e %b '%y"),
    emptyDate = formatDate(parseDate(0));
d3.csv("data.csv").then(function(t) { t.forEach(t => { t.date = parseDate(t.Date), t.cycle15th = +t["Cycle Time 15th"], t.cycle50th = +t["Cycle Time 50th"], t.cycle85th = +t["Cycle Time 85th"], t.throughput = +t.Throughput, t.throughputAvg = +t["Throughput Avg"], t.wip = +t.WIP, t.defectsRaised = +t["Defects Raised"], t.defectsResolved = +t["Defects Resolved"], t.wellbeingBad = parseFloat(t["Wellbeing Negative"]), t.wellbeingOkay = parseFloat(t["Wellbeing Neutral"]), t.wellbeingGood = parseFloat(t["Wellbeing Positive"]) }); var e, a, r = { top: 20, right: 20, bottom: 30, left: 40 };
    e = $("#cycleChartContainer").innerWidth() - r.left - r.right - parseFloat($(".container").css("padding-left")) - parseFloat($(".container").css("padding-right")), a = .6 * $(window).innerHeight() * .25 - r.top - r.bottom; var l = d3.select("#cycleChartContainer").append("svg").attr("id", "cycleChart").attr("width", e + r.left + r.right).attr("height", a + r.top + r.bottom).append("g").attr("transform", "translate(" + r.left + "," + r.top + ")"),
        o = d3.select("#throughputChartContainer").append("svg").attr("id", "throughputChart").attr("width", e + r.left + r.right).attr("height", a + r.top + r.bottom).append("g").attr("transform", "translate(" + r.left + "," + r.top + ")"),
        s = d3.select("#wipChartContainer").append("svg").attr("id", "wipChart").attr("width", e + r.left + r.right).attr("height", a + r.top + r.bottom).append("g").attr("transform", "translate(" + r.left + "," + r.top + ")"),
        d = d3.select("#qualityChartContainer").append("svg").attr("id", "qualityChart").datum(t).attr("width", e + r.left + r.right).attr("height", a + r.top + r.bottom).append("g").attr("transform", "translate(" + r.left + "," + r.top + ")"),
        n = d3.select("#wellbeingChartContainer").append("svg").attr("id", "wellbeingChart").datum(t).attr("width", e + r.left + r.right).attr("height", a + r.top + r.bottom).append("g").attr("transform", "translate(" + r.left + "," + r.top + ")"),
        c = l.append("defs").append("linearGradient").attr("id", "cycleGradient").attr("x1", "0%").attr("x2", "0%").attr("y1", "0%").attr("y2", "100%");
    c.append("stop").attr("class", "bad").attr("offset", "0%"), c.append("stop").attr("class", "okay").attr("offset", "50%"), c.append("stop").attr("class", "good").attr("offset", "100%"); var y = o.append("defs").append("linearGradient").attr("id", "throughputGradient").attr("x1", "0%").attr("x2", "0%").attr("y1", "0%").attr("y2", "100%");
    y.append("stop").attr("class", "good").attr("offset", "0%"), y.append("stop").attr("class", "okay").attr("offset", "50%"), y.append("stop").attr("class", "bad").attr("offset", "100%"); var p = s.append("defs").append("linearGradient").attr("id", "wipGradient").attr("x1", "0%").attr("x2", "0%").attr("y1", "0%").attr("y2", "100%");
    p.append("stop").attr("class", "bad").attr("offset", "0%"), p.append("stop").attr("class", "okay").attr("offset", "50%"), p.append("stop").attr("class", "good").attr("offset", "100%"); var h = n.append("defs").append("linearGradient").attr("id", "wellbeingGradient").attr("x1", "0%").attr("x2", "0%").attr("y1", "0%").attr("y2", "100%");
    h.append("stop").attr("class", "good").attr("offset", "0%"), h.append("stop").attr("class", "okay").attr("offset", "50%"), h.append("stop").attr("class", "bad").attr("offset", "100%"); var x = { good: "#2EB86B", okay: "#E8BF61", bad: "#D85D6C" };
    d3.selectAll(".good").style("stop-color", x.good), d3.selectAll(".okay").style("stop-color", x.okay), d3.selectAll(".bad").style("stop-color", x.bad); var g = d3.scaleTime().range([0, e]),
        u = d3.scaleLinear().range([a, 0]),
        f = d3.line().x(function(t) { return g(t.date) }).y(function(t) { return u(t.cycle50th) }),
        v = d3.area().x(function(t) { return g(t.date) }).y0(function(t) { return u(t.cycle15th) }).y1(function(t) { return u(t.cycle85th) });
    g.domain(d3.extent(t, function(t) { return t.date })), u.domain([0, d3.max(t, function(t) { return t.cycle85th })]), l.append("path").data([t]).attr("class", "line").attr("d", v).style("fill", "grey").style("opacity", .3).style("stroke", "none"); var w = l.append("path").data([t]).attr("class", "line").attr("d", f).style("fill", "none").style("stroke", "url(#cycleGradient)").style("stroke-width", "4px");
    l.append("g").attr("class", "axis").attr("transform", "translate(0," + a + ")").call(d3.axisBottom(g)), l.append("g").attr("class", "axis").call(d3.axisLeft(u).ticks(5)); var m = d3.scaleBand().range([0, e]).padding(.1),
        B = d3.scaleTime().range([0, e]),
        b = d3.scaleLinear().range([a, 0]);
    m.domain(t.map(function(t) { return t.date })), B.domain(d3.extent(t, function(t) { return t.date })), b.domain([0, d3.max(t, function(t) { return t.throughput })]); var T = d3.line().x(function(t) { return B(t.date) }).y(function(t) { return b(t.throughputAvg) });
    o.selectAll(".bar").data(t).enter().append("rect").attr("class", "bar").attr("x", function(t) { return m(t.date) }).attr("width", m.bandwidth()).attr("y", function(t) { return b(t.throughput) }).attr("height", function(t) { return a - b(t.throughput) }).style("opacity", .3).style("fill", "grey"); var k = o.append("path").data([t]).attr("class", "line").attr("d", T).style("fill", "none").style("stroke", "url(#throughputGradient)").style("stroke-width", "4px");
    o.append("g").attr("class", "axis").attr("transform", "translate(0," + a + ")").call(d3.axisBottom(B)), o.append("g").attr("class", "axis").call(d3.axisLeft(b).ticks(5)); var A = d3.scaleTime().range([0, e]),
        R = d3.scaleLinear().range([a, 0]),
        H = d3.line().x(function(t) { return A(t.date) }).y(function(t) { return R(t.wip) }),
        C = d3.area().x(function(t) { return A(t.date) }).y0(function(t) { return R(0) }).y1(function(t) { return R(t.wip) });
    A.domain(d3.extent(t, function(t) { return t.date })), R.domain([0, d3.max(t, function(t) { return t.wip })]), s.append("path").data([t]).attr("class", "line").attr("d", C).style("fill", "grey").style("opacity", .3).style("stroke", "none"); var D = s.append("path").data([t]).attr("class", "line").attr("d", H).style("fill", "none").style("stroke", "url(#wipGradient)").style("stroke-width", "4px");
    s.append("g").attr("class", "axis").attr("transform", "translate(0," + a + ")").call(d3.axisBottom(A)), s.append("g").attr("class", "axis").call(d3.axisLeft(R).ticks(5)); var q = d3.scaleTime().range([0, e]),
        O = d3.scaleLinear().range([a, 0]),
        L = d3.line().x(function(t) { return q(t.date) }).y(function(t) { return O(t.defectsRaised) }),
        G = d3.line().x(function(t) { return q(t.date) }).y(function(t) { return O(t.defectsResolved) });
    q.domain(d3.extent(t, function(t) { return t.date })), O.domain([0, d3.max(t, t => Math.max(t.defectsRaised, t.defectsResolved))]); var P = d3.area().x(function(t) { return q(t.date) }).y1(function(t) { return O(t.defectsRaised) });
    d.append("clipPath").attr("id", "clip-below").append("path").attr("d", P.y0(a)), d.append("clipPath").attr("id", "clip-above").append("path").attr("d", P.y0(0)), d.append("path").attr("class", "area above").attr("clip-path", "url(#clip-above)").attr("d", P.y0(function(t) { return O(t.defectsResolved) })).style("opacity", .3).style("fill", x.good), d.append("path").attr("class", "area below").attr("clip-path", "url(#clip-below)").attr("d", P).style("opacity", .3).style("fill", x.bad); var M = d.append("path").data([t]).attr("class", "line").attr("d", L).style("stroke", x.bad).style("fill", "none").style("stroke-width", "4px"),
        F = d.append("path").data([t]).attr("class", "line").attr("d", G).style("stroke", x.good).style("fill", "none").style("stroke-width", "4px");
    d.append("g").attr("class", "axis").attr("transform", "translate(0," + a + ")").call(d3.axisBottom(q)), d.append("g").attr("class", "axis").call(d3.axisLeft(O).ticks(5)); var W = d3.scaleBand().range([0, e]).padding(.1),
        E = d3.scaleTime().range([0, e]),
        S = d3.scaleLinear().range([a, 0]);
    W.domain(t.map(function(t) { return t.date })), E.domain(d3.extent(t, function(t) { return t.date })), S.domain([-1, 1]); var N = d3.area().x(function(t) { return E(t.date) }).y0(function(t) { return S(t.wellbeingOkay / 2) }).y1(function(t) { return S(t.wellbeingGood + t.wellbeingOkay / 2) }),
        Y = d3.area().x(function(t) { return E(t.date) }).y0(function(t) { return S(-t.wellbeingOkay / 2) }).y1(function(t) { return S(t.wellbeingOkay / 2) }),
        I = d3.area().x(function(t) { return E(t.date) }).y1(function(t) { return S(-t.wellbeingOkay / 2) }).y0(function(t) { return S(-(t.wellbeingBad + t.wellbeingOkay / 2)) }),
        U = d3.line().x(function(t) { return E(t.date) }).y(function(t) { return S(t.wellbeingGood + t.wellbeingOkay / 2) }),
        X = d3.line().x(function(t) { return E(t.date) }).y(function(t) { return S(0) }),
        j = d3.line().x(function(t) { return E(t.date) }).y(function(t) { return S(-(t.wellbeingBad + t.wellbeingOkay / 2)) });
    n.append("path").data([t]).attr("class", "line").attr("d", Y).style("fill", "grey").style("fill-opacity", .3).style("stroke", "grey").style("stroke-width", "2px").style("stroke-opacity", 1), n.append("path").data([t]).attr("class", "line").attr("d", N).style("fill", x.good).style("fill-opacity", .3).style("stroke", x.good).style("stroke-width", "2px").style("stroke-opacity", 1), n.append("path").data([t]).attr("class", "line").attr("d", I).style("fill", x.bad).style("fill-opacity", .3).style("stroke", x.bad).style("stroke-width", "2px").style("stroke-opacity", 1); var z = n.append("path").data([t]).attr("class", "line").attr("d", U).style("fill", "none"),
        J = n.append("path").data([t]).attr("class", "line").attr("d", X).style("fill", "none"),
        K = n.append("path").data([t]).attr("class", "line").attr("d", j).style("fill", "none");
    n.append("g").attr("class", "axis").attr("transform", "translate(0," + a / 2 + ")").call(d3.axisBottom(E).ticks(0)).style("stroke-dasharray", "2, 2"), n.append("g").attr("class", "axis").attr("transform", "translate(0," + a + ")").call(d3.axisBottom(E)), n.append("g").attr("class", "axis").call(d3.axisLeft(S).tickFormat(t => d3.format(".0%")(Math.abs(t))).ticks(5)); var Q = l.append("g").attr("class", "mouse-over-effects"),
        V = (Q.append("line").attr("class", "mouse-line").style("stroke-width", "2px").style("opacity", "0").style("stroke", "white"), Q.append("circle").attr("id", "cycleCircle").attr("class", "hoverCircle").attr("r", 7).style("stroke-width", "2px").style("opacity", "0"), Q.selectAll("rect").data(["HoverRect", "DateRect"]).enter().append("rect").attr("id", t => "cycle" + t).attr("class", "hoverBackground"), Q.selectAll("text").data(["HoverText", "DateText"]).enter().append("text").attr("id", t => "cycle" + t).attr("class", "hoverText").attr("fill", "white"), o.append("g").attr("class", "mouse-over-effects")),
        Z = (V.append("line").attr("class", "mouse-line").style("stroke-width", "2px").style("opacity", "0").style("stroke", "white"), V.append("circle").attr("id", "throughputCircle").attr("class", "hoverCircle").attr("r", 7).style("stroke-width", "2px").style("opacity", "0"), V.selectAll("rect").data(["HoverRect", "DateRect"]).enter().append("rect").attr("id", t => "throughput" + t).attr("class", "hoverBackground"), V.selectAll("text").data(["HoverText", "DateText"]).enter().append("text").attr("id", t => "throughput" + t).attr("class", "hoverText").attr("fill", "white"), s.append("g").attr("class", "mouse-over-effects")),
        _ = (Z.append("line").attr("class", "mouse-line").style("stroke-width", "2px").style("opacity", "0").style("stroke", "white"), Z.append("circle").attr("id", "wipCircle").attr("class", "hoverCircle").attr("r", 7).style("stroke-width", "2px").style("opacity", "0"), Z.selectAll("rect").data(["HoverRect", "DateRect"]).enter().append("rect").attr("id", t => "wip" + t).attr("class", "hoverBackground"), Z.selectAll("text").data(["HoverText", "DateText"]).enter().append("text").attr("id", t => "wip" + t).attr("class", "hoverText").attr("fill", "white"), d.append("g").attr("class", "mouse-over-effects")),
        tt = (_.append("line").attr("class", "mouse-line").style("stroke-width", "2px").style("opacity", "0").style("stroke", "white"), _.append("circle").attr("id", "qualityRaisedCircle").attr("class", "hoverCircle").attr("r", 7).style("stroke-width", "2px").style("opacity", "0"), _.selectAll("rect").data(["qualityRaisedHoverRect", "qualityResolvedHoverRect", "qualityRaisedDateRect"]).enter().append("rect").attr("id", t => t).attr("class", "hoverBackground"), _.selectAll("text").data(["qualityRaisedHoverText", "qualityResolvedHoverText", "qualityRaisedDateText"]).enter().append("text").attr("id", t => t).attr("class", "hoverText").attr("fill", "white"), _.append("circle").attr("id", "qualityResolvedCircle").attr("class", "hoverCircle").attr("r", 7).style("stroke-width", "2px").style("opacity", "0"), n.append("g").attr("class", "mouse-over-effects"));

    function updateMouseOver(l, o, s) { var d = document.getElementById("cycleChartContainer").offsetLeft,
            n = w.node(),
            c = n.getTotalLength(),
            y = k.node(),
            p = y.getTotalLength(),
            h = D.node(),
            x = h.getTotalLength(),
            f = M.node(),
            v = f.getTotalLength(),
            m = F.node(),
            T = m.getTotalLength(),
            H = z.node(),
            C = H.getTotalLength(),
            O = J.node(),
            L = O.getTotalLength(),
            G = K.node(),
            P = G.getTotalLength(),
            W = d3.bisector(t => t.date).right,
            S = (Math.max(c, p, x, v, T), Math.max(d3.select("text#cycleHoverText").node().getBBox().width, d3.select("text#throughputHoverText").node().getBBox().width, d3.select("text#wipHoverText").node().getBBox().width, d3.select("text#qualityRaisedHoverText").node().getBBox().width, d3.select("text#wellbeingGoodHoverText").node().getBBox().width, d3.select("text#wellbeingOkayHoverText").node().getBBox().width, d3.select("text#wellbeingBadHoverText").node().getBBox().width)),
            N = d3.scaleSequential().interpolator(piecewise(d3.interpolateRgb, [s.good, s.okay, s.bad])).domain([u(d3.min(t, t => t.cycle50th)), u(d3.max(t, t => t.cycle50th))]),
            Y = d3.scaleSequential().interpolator(piecewise(d3.interpolateRgb, [s.bad, s.okay, s.good])).domain([b(d3.min(t, t => +t.throughputAvg)), b(d3.max(t, t => +t.throughputAvg))]),
            I = d3.scaleSequential().interpolator(piecewise(d3.interpolateRgb, [s.good, s.okay, s.bad])).domain([R(d3.min(t, t => +t.wip)), R(d3.max(t, t => +t.wip))]);
        d3.selectAll(".mouse-line").attr("x1", l[0]).attr("x2", l[0]).attr("y1", a).attr("y2", 0); var U = d3.event.pageX - d - r.left - parseFloat($(".container").css("padding-left")),
            X = o[W(o, g.invert(U))],
            j = o[W(o, B.invert(U))],
            Q = o[W(o, A.invert(U))],
            V = o[W(o, q.invert(U))],
            Z = o[W(o, q.invert(U))],
            _ = o[W(o, E.invert(U))],
            tt = o[W(o, E.invert(U))],
            et = o[W(o, E.invert(U))]; for (d3.select("text#cycleDateText").style("opacity", 1).attr("x", U).attr("y", a + r.bottom / 2 + 5).attr("dy", "0.1em").attr("text-anchor", "middle").text(cleanDate(X.date)), d3.select("rect#cycleDateRect").style("opacity", 1).attr("x", U).attr("y", a + r.bottom / 2 + 5).attr("width", d3.select("text#cycleDateText").node().getBBox().width + 2).attr("height", d3.select("text#cycleDateText").node().getBBox().height + 2).attr("transform", "translate(" + -d3.select("text#cycleDateText").node().getBBox().width / 2 + ",-15)"), d3.select("text#throughputDateText").style("opacity", 1).attr("x", U).attr("y", a + r.bottom / 2 + 5).attr("dy", "0.1em").attr("text-anchor", "middle").text(cleanDate(j.date)), d3.select("rect#throughputDateRect").style("opacity", 1).attr("x", U).attr("y", a + r.bottom / 2 + 5).attr("width", d3.select("text#throughputDateText").node().getBBox().width + 2).attr("height", d3.select("text#throughputDateText").node().getBBox().height + 2).attr("transform", "translate(" + -d3.select("text#throughputDateText").node().getBBox().width / 2 + ",-15)"), d3.select("text#wipDateText").style("opacity", 1).attr("x", U).attr("y", a + r.bottom / 2 + 5).attr("dy", "0.1em").attr("text-anchor", "middle").text(cleanDate(Q.date)), d3.select("rect#wipDateRect").style("opacity", 1).attr("x", U).attr("y", a + r.bottom / 2 + 5).attr("width", d3.select("text#wipDateText").node().getBBox().width + 2).attr("height", d3.select("text#wipDateText").node().getBBox().height + 2).attr("transform", "translate(" + -d3.select("text#wipDateText").node().getBBox().width / 2 + ",-15)"), d3.select("text#qualityRaisedDateText").style("opacity", 1).attr("x", U).attr("y", a + r.bottom / 2 + 5).attr("dy", "0.1em").attr("text-anchor", "middle").text(cleanDate(V.date)), d3.select("rect#qualityRaisedDateRect").style("opacity", 1).attr("x", U).attr("y", a + r.bottom / 2 + 5).attr("width", d3.select("text#qualityRaisedDateText").node().getBBox().width + 2).attr("height", d3.select("text#qualityRaisedDateText").node().getBBox().height + 2).attr("transform", "translate(" + -d3.select("text#qualityRaisedDateText").node().getBBox().width / 2 + ",-15)"), d3.select("text#wellbeingDateText").style("opacity", 1).attr("x", U).attr("y", a + r.bottom / 2 + 5).attr("dy", "0.1em").attr("text-anchor", "middle").text(cleanDate(_.date)), d3.select("rect#wellbeingDateRect").style("opacity", 1).attr("x", U).attr("y", a + r.bottom / 2 + 5).attr("width", d3.select("text#wellbeingDateText").node().getBBox().width + 2).attr("height", d3.select("text#wellbeingDateText").node().getBBox().height + 2).attr("transform", "translate(" + -d3.select("text#wellbeingDateText").node().getBBox().width / 2 + ",-15)"), i = U; i < c; i += 1) { var at = n.getPointAtLength(i); if (at.x >= U) break } if (e - at.x - S < 30) var rt = -15 - d3.select("text#cycleHoverText").node().getBBox().width;
        else rt = 10; for (d3.select("circle#cycleCircle").style("fill", N(at.y)).style("stroke", "white").style("opacity", 1).attr("cx", U - 1).attr("cy", at.y), d3.select("text#cycleHoverText").style("opacity", 1).attr("x", U).attr("y", at.y).attr("dx", rt).attr("dy", "0.25em").text("Average: " + X.cycle50th + " Bus. Days"), d3.select("rect#cycleHoverRect").style("opacity", 1).attr("x", U).attr("y", at.y).attr("width", d3.select("text#cycleHoverText").node().getBBox().width + 2).attr("height", d3.select("text#cycleHoverText").node().getBBox().height + 2).attr("transform", "translate(" + rt + ",-12.5)"), i = U; i < p; i += 1) { var lt = y.getPointAtLength(i); if (lt.x >= U) break } if (e - lt.x - S < 30) var ot = -15 - d3.select("text#throughputHoverText").node().getBBox().width;
        else ot = 10; for (d3.select("circle#throughputCircle").style("fill", Y(lt.y)).style("stroke", "white").style("opacity", 1).attr("cx", U).attr("cy", lt.y), d3.select("text#throughputHoverText").style("opacity", 1).attr("x", U).attr("y", lt.y).attr("dx", ot).attr("dy", "0.25em").text("Average: " + j.throughputAvg + " User Stories / Week"), d3.select("rect#throughputHoverRect").style("opacity", 1).attr("x", U).attr("y", lt.y).attr("width", d3.select("text#throughputHoverText").node().getBBox().width + 2).attr("height", d3.select("text#throughputHoverText").node().getBBox().height + 2).attr("transform", "translate(" + ot + ",-12.5)"), i = U; i < x; i += 1) { var it = h.getPointAtLength(i); if (it.x >= U) break } if (e - it.x - S < 30) var st = -15 - d3.select("text#wipHoverText").node().getBBox().width;
        else st = 10; for (d3.select("circle#wipCircle").style("fill", I(it.y)).style("stroke", "white").style("opacity", 1).attr("cx", U - 1).attr("cy", it.y), d3.select("text#wipHoverText").style("opacity", 1).attr("x", U).attr("y", it.y).attr("dx", st).attr("dy", "0.25em").text("Total: " + Q.wip + " User Stories"), d3.select("rect#wipHoverRect").style("opacity", 1).attr("x", U).attr("y", it.y).attr("width", d3.select("text#wipHoverText").node().getBBox().width + 2).attr("height", d3.select("text#wipHoverText").node().getBBox().height + 2).attr("transform", "translate(" + st + ",-12.5)"), i = U; i < v; i += 1) { var dt = f.getPointAtLength(i); if (dt.x >= U) break } if (e - dt.x - S < 30) var nt = -15 - d3.select("text#qualityRaisedHoverText").node().getBBox().width;
        else nt = 10; for (i = U; i < T; i += 1) { var ct = m.getPointAtLength(i); if (ct.x >= U) break } if (e - ct.x - S < 30) var yt = -15 - d3.select("text#qualityResolvedHoverText").node().getBBox().width;
        else yt = 10; if (ct.y - dt.y < d3.select("text#qualityResolvedHoverText").node().getBBox().height + 2) var pt = -(d3.select("text#qualityResolvedHoverText").node().getBBox().height + 2) + ct.y - dt.y;
        else pt = 0; for (d3.select("circle#qualityRaisedCircle").style("fill", "#D85D6C").style("stroke", "white").style("opacity", 1).attr("cx", U - 1).attr("cy", dt.y), d3.select("text#qualityRaisedHoverText").style("opacity", 1).attr("x", U).attr("y", dt.y).attr("dx", nt).attr("dy", pt).text("Raised: " + V.defectsRaised), d3.select("rect#qualityRaisedHoverRect").style("opacity", 1).attr("x", U).attr("y", dt.y).attr("width", d3.select("text#qualityRaisedHoverText").node().getBBox().width + 2).attr("height", d3.select("text#qualityRaisedHoverText").node().getBBox().height + 2).attr("transform", "translate(" + nt + "," + (-15.5 + pt) + ")"), d3.select("circle#qualityResolvedCircle").style("fill", "#2EB86B").style("stroke", "white").style("opacity", 1).attr("cx", U - 1).attr("cy", ct.y), d3.select("text#qualityResolvedHoverText").style("opacity", 1).attr("x", U).attr("y", ct.y).attr("dx", yt).attr("dy", "0.25em").text("Resolved: " + Z.defectsResolved), d3.select("rect#qualityResolvedHoverRect").style("opacity", 1).attr("x", U).attr("y", ct.y).attr("width", d3.select("text#qualityResolvedHoverText").node().getBBox().width + 2).attr("height", d3.select("text#qualityResolvedHoverText").node().getBBox().height + 2).attr("transform", "translate(" + yt + ",-12.5)"), i = U; i < C; i += 1) { var ht = H.getPointAtLength(i); if (ht.x >= U) break } if (e - ht.x - S < 30) var xt = -15 - d3.select("text#wellbeingGoodHoverText").node().getBBox().width;
        else xt = 10; for (i = U; i < L; i += 1) { var gt = O.getPointAtLength(i); if (gt.x >= U) break } if (e - gt.x - S < 30) var ut = -15 - d3.select("text#wellbeingOkayHoverText").node().getBBox().width;
        else ut = 10; for (i = U; i < P; i += 1) { var ft = G.getPointAtLength(i); if (ft.x >= U) break } if (e - ft.x - S < 30) var vt = -15 - d3.select("text#wellbeingBadHoverText").node().getBBox().width;
        else vt = 10; if (gt.y - ht.y < d3.select("text#wellbeingOkayHoverText").node().getBBox().height + 2) var wt = -(d3.select("text#wellbeingOkayHoverText").node().getBBox().height + 2) + gt.y - ht.y;
        else wt = 0; if (ft.y - gt.y < d3.select("text#wellbeingOkayHoverText").node().getBBox().height + 2) var mt = d3.select("text#wellbeingOkayHoverText").node().getBBox().height + 2 + gt.y - ft.y;
        else mt = 0;
        d3.select("circle#wellbeingGoodCircle").style("fill", "#2EB86B").style("stroke", "white").style("opacity", 1).attr("cx", U - 1).attr("cy", ht.y), d3.select("text#wellbeingGoodHoverText").style("opacity", 1).attr("x", U).attr("y", ht.y).attr("dx", xt).attr("dy", wt).text("Positive: " + d3.format(".0%")(tt.wellbeingGood)), d3.select("rect#wellbeingGoodHoverRect").style("opacity", 1).attr("x", U).attr("y", ht.y).attr("width", d3.select("text#wellbeingGoodHoverText").node().getBBox().width + 2).attr("height", d3.select("text#wellbeingGoodHoverText").node().getBBox().height + 2).attr("transform", "translate(" + xt + "," + (-15.5 + wt) + ")"), d3.select("circle#wellbeingOkayCircle").style("fill", "grey").style("stroke", "white").style("opacity", 1).attr("cx", U - 1).attr("cy", gt.y), d3.select("text#wellbeingOkayHoverText").style("opacity", 1).attr("x", U).attr("y", gt.y).attr("dx", ut).attr("dy", "0.25em").text("Neutral: " + d3.format(".0%")(tt.wellbeingOkay)), d3.select("rect#wellbeingOkayHoverRect").style("opacity", 1).attr("x", U).attr("y", gt.y).attr("width", d3.select("text#wellbeingOkayHoverText").node().getBBox().width + 2).attr("height", d3.select("text#wellbeingOkayHoverText").node().getBBox().height + 2).attr("transform", "translate(" + ut + ",-12.5)"), d3.select("circle#wellbeingBadCircle").style("fill", "#D85D6C").style("stroke", "white").style("opacity", 1).attr("cx", U - 1).attr("cy", ft.y), d3.select("text#wellbeingBadHoverText").style("opacity", 1).attr("x", U).attr("y", ft.y).attr("dx", vt).attr("dy", mt).text("Negative: " + d3.format(".0%")(et.wellbeingBad)), d3.select("rect#wellbeingBadHoverRect").style("opacity", 1).attr("x", U).attr("y", ft.y).attr("width", d3.select("text#wellbeingBadHoverText").node().getBBox().width + 2).attr("height", d3.select("text#wellbeingBadHoverText").node().getBBox().height + 2).attr("transform", "translate(" + vt + "," + (-15.5 + mt) + ")") }

    function piecewise(t, e) { for (var a = 0, r = e.length - 1, l = e[0], o = new Array(r < 0 ? 0 : r); a < r;) o[a] = t(l, l = e[++a]); return function(t) { var e = Math.max(0, Math.min(r - 1, Math.floor(t *= r))); return o[e](t - e) } }
    tt.append("line").attr("class", "mouse-line").style("stroke-width", "2px").style("opacity", "0").style("stroke", "white"), tt.append("circle").attr("id", "wellbeingGoodCircle").attr("class", "hoverCircle").attr("r", 7).style("stroke-width", "2px").style("opacity", "0"), tt.selectAll("rect").data(["wellbeingGoodHoverRect", "wellbeingOkayHoverRect", , "wellbeingBadHoverRect", "wellbeingDateRect"]).enter().append("rect").attr("id", t => t).attr("class", "hoverBackground"), tt.selectAll("text").data(["wellbeingGoodHoverText", "wellbeingOkayHoverText", "wellbeingBadHoverText", "wellbeingDateText"]).enter().append("text").attr("id", t => t).attr("class", "hoverText").attr("fill", "white"), tt.append("circle").attr("id", "wellbeingOkayCircle").attr("class", "hoverCircle").attr("r", 7).style("stroke-width", "2px").style("opacity", "0"), tt.append("circle").attr("id", "wellbeingBadCircle").attr("class", "hoverCircle").attr("r", 7).style("stroke-width", "2px").style("opacity", "0"), Q.append("rect").attr("width", e).attr("height", a).attr("fill", "none").attr("pointer-events", "all").on("mouseout", function() { d3.selectAll(".mouse-line").style("opacity", "0"), d3.selectAll(".hoverCircle").style("opacity", "0"), d3.selectAll(".hoverBackground").style("opacity", "0"), d3.selectAll(".hoverText").style("opacity", "0") }).on("mouseover", function() { d3.selectAll(".mouse-line").style("opacity", "1"), d3.selectAll(".hoverCircle").style("opacity", "1"), d3.selectAll(".hoverBackground").style("opacity", "1"), d3.selectAll(".hoverText").style("opacity", "1") }).on("mousemove", function() { updateMouseOver(d3.mouse(this), t, x) }), V.append("rect").attr("width", e).attr("height", a).attr("fill", "none").attr("pointer-events", "all").on("mouseout", function() { d3.selectAll(".mouse-line").style("opacity", "0"), d3.selectAll(".hoverCircle").style("opacity", "0"), d3.selectAll(".hoverBackground").style("opacity", "0"), d3.selectAll(".hoverText").style("opacity", "0") }).on("mouseover", function() { d3.selectAll(".mouse-line").style("opacity", "1"), d3.selectAll(".hoverCircle").style("opacity", "1"), d3.selectAll(".hoverBackground").style("opacity", "1"), d3.selectAll(".hoverText").style("opacity", "1") }).on("mousemove", function() { updateMouseOver(d3.mouse(this), t, x) }), Z.append("rect").attr("width", e).attr("height", a).attr("fill", "none").attr("pointer-events", "all").on("mouseout", function() { d3.selectAll(".mouse-line").style("opacity", "0"), d3.selectAll(".hoverCircle").style("opacity", "0"), d3.selectAll(".hoverBackground").style("opacity", "0"), d3.selectAll(".hoverText").style("opacity", "0") }).on("mouseover", function() { d3.selectAll(".mouse-line").style("opacity", "1"), d3.selectAll(".hoverCircle").style("opacity", "1"), d3.selectAll(".hoverBackground").style("opacity", "1"), d3.selectAll(".hoverText").style("opacity", "1") }).on("mousemove", function() { updateMouseOver(d3.mouse(this), t, x) }), _.append("rect").attr("width", e).attr("height", a).attr("fill", "none").attr("pointer-events", "all").on("mouseout", function() { d3.selectAll(".mouse-line").style("opacity", "0"), d3.selectAll(".hoverCircle").style("opacity", "0"), d3.selectAll(".hoverBackground").style("opacity", "0"), d3.selectAll(".hoverText").style("opacity", "0") }).on("mouseover", function() { d3.selectAll(".mouse-line").style("opacity", "1"), d3.selectAll(".hoverCircle").style("opacity", "1"), d3.selectAll(".hoverBackground").style("opacity", "1"), d3.selectAll(".hoverText").style("opacity", "1") }).on("mousemove", function() { updateMouseOver(d3.mouse(this), t, x) }), tt.append("rect").attr("width", e).attr("height", a).attr("fill", "none").attr("pointer-events", "all").on("mouseout", function() { d3.selectAll(".mouse-line").style("opacity", "0"), d3.selectAll(".hoverCircle").style("opacity", "0"), d3.selectAll(".hoverBackground").style("opacity", "0"), d3.selectAll(".hoverText").style("opacity", "0") }).on("mouseover", function() { d3.selectAll(".mouse-line").style("opacity", "1"), d3.selectAll(".hoverCircle").style("opacity", "1"), d3.selectAll(".hoverBackground").style("opacity", "1"), d3.selectAll(".hoverText").style("opacity", "1") }).on("mousemove", function() { updateMouseOver(d3.mouse(this), t, x) }) });